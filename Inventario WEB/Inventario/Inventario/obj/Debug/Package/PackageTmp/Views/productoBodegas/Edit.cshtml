@model Inventario.Models.productoBodega

@{
    ViewBag.Title = "Editar Datos de Producto en Bodega";
}

<h2>Editar Datos de Producto en Bodega</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Datos:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.productoBodegaID)

        <div class="form-group">
            @Html.LabelFor(model => model.productosID, "productosID", htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="text" name="productosID" value="@Model.productosID" class="hidden" />
            <div class="col-md-10">
                @Html.EditorFor(model => model.productos.descripcion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.productosID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bodegaID, "bodegaID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("bodegaID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.bodegaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SectorID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="SectorID" name="SectorID">
                    @foreach(Inventario.Models.sectores Sector in new Inventario.DAL.Context().Sectores.Where(s=>s.BodegaID==Model.Bodega.BodegaID))
                    {
                        @if (Sector.sectoresID == Model.SectorID) 
                        { 
                            <option value="@Sector.sectoresID" selected>@Sector.nombre</option>
                        }
                        else
                        {
                            <option value="@Sector.sectoresID">@Sector.nombre</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cantidadDisponible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cantidadDisponible, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cantidadDisponible, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cantidadMinima, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cantidadMinima, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cantidadMinima, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cantidadMaxima, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cantidadMaxima, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cantidadMaxima, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.costoUnitario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.costoUnitario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.costoUnitario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.alertarStockBajo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.alertarStockBajo)
                    @Html.ValidationMessageFor(model => model.alertarStockBajo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>
